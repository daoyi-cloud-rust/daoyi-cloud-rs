//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "system_social_user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u64,
    pub r#type: i8,
    pub openid: String,
    pub token: Option<String>,
    pub raw_token_info: String,
    pub nickname: String,
    pub avatar: Option<String>,
    pub raw_user_info: String,
    pub code: String,
    pub state: Option<String>,
    pub creator: Option<String>,
    #[sea_orm(default_expr = "Expr::current_timestamp()")]
    pub create_time: DateTime,
    pub updater: Option<String>,
    #[sea_orm(on_update = "Expr::current_timestamp()")]
    pub update_time: DateTime,
    #[sea_orm(default_value = false)]
    pub deleted: bool,
    #[sea_orm(default_value = 0)]
    pub tenant_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
